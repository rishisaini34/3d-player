name: Jenkins 3D Player Job Status Check

on:
  workflow_dispatch:

jobs:
  check-jenkins-status:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Check Jenkins Job Status
        id: jenkins-status
        run: |
          JOB_NAME="3d-player-build-job"
          JENKINS_URL="http://45.79.122.237:8080"
          USERNAME="coral"
          TOKEN="11a6a553d88e61d4bc691f2c8e6c0cad98"

          # Get the job status and additional info from Jenkins
          BUILD_INFO=$(curl -s -u $USERNAME:$TOKEN $JENKINS_URL/job/$JOB_NAME/lastBuild/api/json)
          STATUS=$(echo $BUILD_INFO | jq -r '.result')
          BUILD_NUMBER=$(echo $BUILD_INFO | jq -r '.number')
          BUILD_TIMESTAMP=$(echo $BUILD_INFO | jq -r '.timestamp')

          # Convert timestamp to human-readable date
          BUILD_DATE=$(date -d @"$(($BUILD_TIMESTAMP / 1000))" +'%Y-%m-%d %H:%M:%S')

          if [ "$STATUS" == "null" ]; then
            echo "Job is running or has never been built."
            STATUS="RUNNING"
          fi

          # Fetch build logs in case of failure
          if [ "$STATUS" == "FAILURE" ]; then
            BUILD_LOG=$(curl -s -u $USERNAME:$TOKEN "$JENKINS_URL/job/$JOB_NAME/$BUILD_NUMBER/consoleText" | tail -n 10)
            echo "Build failed with error log: $BUILD_LOG"
          fi

          echo "Job Status: $STATUS"
          echo "Build Number: $BUILD_NUMBER"
          echo "Build Date: $BUILD_DATE"

          # Set outputs
          echo "status=$STATUS" >> $GITHUB_ENV
          echo "build_number=$BUILD_NUMBER" >> $GITHUB_ENV
          echo "build_date=$BUILD_DATE" >> $GITHUB_ENV
